{
  "createdAt": "2025-01-19T13:23:28.982Z",
  "updatedAt": "2025-01-25T20:11:54.000Z",
  "id": "JQavbq9uzigZ2b3Z",
  "name": "⚙️—Make/n8n GitHub Backup",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 1
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        140,
        100
      ],
      "id": "77c142a9-ef74-495b-a5d6-f8a5e9656116",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "jsCode": "// Get all input items as an array\nconst allItems = $input.all();\n\n// Iterate over all items and process each one\nreturn allItems.map(item => {\n  // Access the blueprint from each input item\n  const jsonContent = item.json.response.blueprint;\n\n  // Format it with indentation\n  const formattedContent = JSON.stringify(jsonContent, null, 2);\n\n  // Return the formatted content for each item\n  return {\n    json: { formattedContent },\n  };\n});\n$input.first().json.response.blueprint"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1240,
        0
      ],
      "id": "ae92fad8-ba85-4e3c-a18a-4e664c4898df",
      "name": "Format"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "={{ $('Set Make Globals').item.json.gitHubRepoOwner }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Set Make Globals').item.json.gitHubRepoName }}",
          "mode": "name"
        },
        "filePath": "={{ $('Set Make Globals').item.json.gitHubRepoPath }}{{ $('Iterator').item.json.id }}.json",
        "fileContent": "={{ $('Format').item.json.formattedContent }}",
        "commitMessage": "=\"{{ $('Iterator').item.json.name }}\" last edited by {{ $('Iterator').item.json.updatedByUser.name }} @ {{ $('Iterator').item.json.lastEdit }}"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [
        1440,
        0
      ],
      "id": "e2ccc5b3-e631-4a6b-93a5-e3476f454ec7",
      "name": "Update File",
      "credentials": {
        "githubApi": {
          "id": "w9OVe7EajLtOxQ5D",
          "name": "Karim's GitHub account "
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "fieldToSplitOut": "scenarios",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        840,
        0
      ],
      "id": "dc8df265-14ba-4a16-a71b-7483a270a847",
      "name": "Iterator"
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "={{ $('Set Make Globals').item.json.gitHubRepoOwner }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Set Make Globals').item.json.gitHubRepoName }}",
          "mode": "name"
        },
        "filePath": "={{ $('Set Make Globals').item.json.gitHubRepoPath }}{{ $('Iterator').item.json.id }}.json",
        "fileContent": "={{ $('Format').item.json.formattedContent }}",
        "commitMessage": "=\"{{ $('Iterator').item.json.name }}\" last edited by {{ $('Iterator').item.json.updatedByUser.name }} @ {{ $('Iterator').item.json.lastEdit }}"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [
        1680,
        0
      ],
      "id": "d8f71cda-0c2d-40cb-adcd-dee89cd43812",
      "name": "Create File",
      "credentials": {
        "githubApi": {
          "id": "w9OVe7EajLtOxQ5D",
          "name": "Karim's GitHub account "
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "content": "Create the GitHub connection to your account and fill out the set variables node",
        "height": 420
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        380,
        -80
      ],
      "id": "cd661eb0-b438-4d82-aefd-19f7fdebe6d8",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "jsCode": "// Iterate over all input items\nreturn items.map(item => {\n  // Get the JSON data of the current item\n  const rawJson = item.json;\n\n  // Extract the workflow ID and name\n  const workflowId = rawJson.id;\n  const workflowName = rawJson.name;\n\n  // Format the JSON data\n  const formattedJson = JSON.stringify(rawJson, null, 2);\n\n  // Return the workflow ID, name, and the formatted JSON in the output\n  return {\n    json: {\n      workflowId,\n      workflowName,\n      formattedJson\n    }\n  };\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1240,
        180
      ],
      "id": "ec9a7e0f-fc35-4f1a-9c7f-fa0a82f1ab7a",
      "name": "Format1"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "=karimzynera",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "=n8n-backup",
          "mode": "name"
        },
        "filePath": "=workflows/{{ $json.workflowId }}.json",
        "fileContent": "={{ $json.formattedJson }}",
        "commitMessage": "=\"{{ $json.workflowName }}\" last edited @ {{ $now }}"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [
        1440,
        180
      ],
      "id": "acf5ca3d-0cc8-4211-9c91-c4e8df2888cd",
      "name": "Update File1",
      "credentials": {
        "githubApi": {
          "id": "w9OVe7EajLtOxQ5D",
          "name": "Karim's GitHub account "
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "=karimzynera",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "=n8n-backup",
          "mode": "name"
        },
        "filePath": "=workflows/{{ $json.workflowId }}.json",
        "fileContent": "={{ $json.formattedJson }}",
        "commitMessage": "=\"{{ $json.workflowName }}\" last edited @ {{ $now }}"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [
        1680,
        180
      ],
      "id": "8a53e0f7-deac-4152-9168-63ac83034140",
      "name": "Update File2",
      "credentials": {
        "githubApi": {
          "id": "w9OVe7EajLtOxQ5D",
          "name": "Karim's GitHub account "
        }
      },
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        440,
        180
      ],
      "id": "8c2614b1-e0ba-4c0a-a961-ccf7abc12f1a",
      "name": "Set Globals1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2d766b8a-cbc6-4995-bfe0-d3559a27d6ab",
              "name": "makeToken",
              "value": "064e4cab-df56-4b12-ad0b-6609ff694a2e",
              "type": "string"
            },
            {
              "id": "1c5af5ee-6ca9-441a-88ff-c2a778c78308",
              "name": "makeEnvironment",
              "value": "eu1",
              "type": "string"
            },
            {
              "id": "e2bba187-b0bf-4fc2-b1cf-1c0fb8af52c4",
              "name": "makeTeamId",
              "value": "170759",
              "type": "string"
            },
            {
              "id": "eb5b27f9-3f47-4f31-a160-fb1ba8285f49",
              "name": "gitHubRepoOwner",
              "value": "karimzynera",
              "type": "string"
            },
            {
              "id": "ab828544-9263-4d2e-a40a-30a3fe3efe92",
              "name": "gitHubRepoName",
              "value": "make-backup",
              "type": "string"
            },
            {
              "id": "fc12ddef-463c-4d8a-b48e-e7b99277cd2b",
              "name": "gitHubRepoPath",
              "value": "scenarios/",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        440,
        0
      ],
      "id": "11f94cf3-14e5-44bb-83fc-b452f0469f09",
      "name": "Set Make Globals"
    },
    {
      "parameters": {
        "url": "=https://{{ $json.makeEnvironment }}.make.com/api/v2/scenarios",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "teamId",
              "value": "={{ $json.makeTeamId }}"
            },
            {
              "name": "pg[limit]",
              "value": "999"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Token {{ $json.makeToken }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        640,
        0
      ],
      "id": "f34857ee-4383-4bfd-906e-4735158c28e1",
      "name": "List Make Scenarios"
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        1040,
        180
      ],
      "id": "889b6271-da49-485c-973a-1fd265d5f169",
      "name": "List n8n Workflows",
      "credentials": {
        "n8nApi": {
          "id": "OgLhtoN5fuqBEZ6F",
          "name": "n8n account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://{{ $('Set Make Globals').item.json.makeEnvironment }}.make.com/api/v2/scenarios/{{ $json.id }}/blueprint",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "teamId",
              "value": "={{ $('Set Make Globals').item.json.makeTeamId }}"
            },
            {
              "name": "pg[limit]",
              "value": "999"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Token {{ $('Set Make Globals').item.json.makeToken }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1040,
        0
      ],
      "id": "74e3340d-8fc4-439e-9087-3463e1346148",
      "name": "Get Make Scenario Blueprint",
      "retryOnFail": true
    }
  ],
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Set Make Globals",
            "type": "main",
            "index": 0
          },
          {
            "node": "Set Globals1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format": {
      "main": [
        [
          {
            "node": "Update File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update File": {
      "main": [
        [],
        [
          {
            "node": "Create File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Iterator": {
      "main": [
        [
          {
            "node": "Get Make Scenario Blueprint",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format1": {
      "main": [
        [
          {
            "node": "Update File1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update File1": {
      "main": [
        [],
        [
          {
            "node": "Update File2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Globals1": {
      "main": [
        [
          {
            "node": "List n8n Workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Make Globals": {
      "main": [
        [
          {
            "node": "List Make Scenarios",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Make Scenarios": {
      "main": [
        [
          {
            "node": "Iterator",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List n8n Workflows": {
      "main": [
        [
          {
            "node": "Format1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Make Scenario Blueprint": {
      "main": [
        [
          {
            "node": "Format",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    },
    "node:Schedule Trigger1": {
      "recurrenceRules": []
    }
  },
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "b0288e09-406b-4354-bf78-dc6c0818d8fb",
  "triggerCount": 1,
  "tags": []
}